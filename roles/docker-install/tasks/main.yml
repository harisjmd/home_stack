---
# tasks file for docker-install

- name: Install docker dependencies
  become: true
  ansible.builtin.apt:
   name: "{{ docker_dep_packages }}"
   state: present

- name: Check if docker-ce already exists
  become: true
  ansible.builtin.command:
   argv:
    - docker
    - version
  register: docker_exists
  changed_when: docker_exists.rc != 0
  ignore_errors: true

- name: Show that docker already exists
  ansible.builtin.debug:
   var: docker_exists.stdout_lines
  when: docker_exists is success

- name: Add Docker GPG key
  become: true
  ansible.builtin.apt_key:
   url: "{{ docker_apt_key }}"
   state: present
  when: docker_exists is failed

- name: Create docker-install working folder
  ansible.builtin.file:
   path: /home/{{ ansible_user_id }}/.acd_docker_install
   state: directory
   mode: 0764

- name: Download Docker installer script
  ansible.builtin.uri:
   url: https://get.docker.com
   dest: /home/{{ ansible_user_id }}/.acd_docker_install/get-docker.sh
   status_code:
    - 200
    - 304
  when: docker_exists is failed

- name: Execute Docker installer script
  become: true
  ansible.builtin.command:
   argv:
    - sh
    - /home/{{ ansible_user_id }}/.acd_docker_install/get-docker.sh
  when: docker_exists is failed

- name: Install docker-compose
  become: true
  ansible.builtin.pip:
   name: docker-compose
  when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_version'] == "11"

- name: Install docker-compose
  become: true
  apt:
   name: "python3-compose"
   state: present
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_version'] | int >= 12
  
- name: Add user {{ ansible_user_id }} to docker group
  become: true
  ansible.builtin.user:
   name: "{{ ansible_user_id }}"
   groups:
    - docker
   append: true

- name: Verify Docker installation
  become: true
  ansible.builtin.command:
   argv:
    - docker
    - run
    - hello-world
  register: docker_verify
  when: docker_exists is failed

- name: Print Docker installation verify
  ansible.builtin.debug:
   var: docker_verify.stdout_lines
  when: docker_exists is failed
